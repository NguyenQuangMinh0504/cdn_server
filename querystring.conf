events {
}

http {

    upstream my_upstream {
        server 127.0.0.1:8082;
        
    }

    include upstream.conf;
    proxy_cache_path cache levels=1:2 keys_zone=my_cache:1m inactive=60m use_temp_path=off; 

    map $host $query_string_cache_status {
        default 1;
    }


    map $query_string_cache_status $cache_key {
        default "$scheme$request_method$host$request_uri";
        1       "$scheme$request_method$host$request_uri";
        0       "$scheme$request_method$host$uri";

    }

    proxy_cache_key $cache_key;
    proxy_cache_valid 200 30m;



    server {
        access_log logs/access.log combined;
        error_log logs/error.log debug;
        listen 8081 reuseport;
        include site.conf;
    }



    server {
        access_log logs/access.log combined;
        error_log logs/error.log debug;
        listen 8000;
        set $x_upstream_host $host;
        set $x_upstream_address "";
        # access_by_lua_file query_string.lua;


        location /old {
            return 301 http://localhost:8082;
        }


        location / {
            proxy_pass http://localhost:8082;
            # proxy_cache my_cache;


        }

        location /something {
            set $rewrite_status 1;


            set $path "^/something/";
            set $new_path "/helloworld";


            set $x_upstream_host "my_upstream";
            access_by_lua_file rewrite_url.lua;

            # if ($rewrite_status = 0) {
            #     rewrite ^(?<path>)(.*)$ $new_path permanent;
            # }
            # if ($rewrite_status = 1) {
            #     rewrite ^(?<path>)(.*)$ $new_path$2 permanent;
            # }



            if ($rewrite_status = 0) {
                rewrite ^/something/oldurl/(.*)$ /something/newurl permanent;
            }
            if ($rewrite_status = 1) {
                rewrite ^/something/newurl/(.*)$ /something/newurl$2 permanent;
            }

            # proxy_pass $scheme://$x_upstream_host$x_upstream_request_uri;
    

}


    }

    server {
        listen 8082;
        access_log logs/origin/access.log combined;
        error_log logs/origin/error.log error;
        location /something.png {
            return 200 "Hello world";
        }
        location /something/newurl {
            return 200 "This is new url";
        }
        location /something/oldurl {
            return 200 "This is old url";
        }
    }

}
